# Generated by Django 3.1 on 2020-08-04 10:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, verbose_name='Краткое описание')),
                ('address', models.CharField(max_length=200)),
                ('opening_hours', models.TimeField(blank=True, null=True)),
                ('closing_hours', models.TimeField(blank=True, null=True)),
                ('average_plate', models.FloatField(blank=True, default=0, null=True)),
                ('latitude', models.FloatField(blank=True, help_text='Latitude coordinate related to the address.', null=True)),
                ('longitude', models.FloatField(blank=True, help_text='Longitude coordinate related to the address.', null=True)),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='places', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlaceUserReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст комментария')),
                ('published_at', models.DateTimeField(verbose_name='Дата и время публикации')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='places.place')),
            ],
            options={
                'ordering': ['published_at'],
            },
        ),
        migrations.CreateModel(
            name='PlaceImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/')),
                ('order_number', models.PositiveSmallIntegerField(default=0)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='places.place')),
            ],
            options={
                'ordering': ['order_number'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, verbose_name='Краткое описание')),
                ('image', models.ImageField(blank=True, upload_to='events/')),
                ('fee', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('datetime', models.DateTimeField()),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='places.place')),
            ],
        ),
        migrations.CreateModel(
            name='Drink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=100)),
                ('photo', models.ImageField(blank=True, upload_to='drinks/')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drinks', to='places.place')),
            ],
        ),
    ]
